// 지원자 정보 입력
void inputDefultData(struct Person* p) {
    printf("이름을 입력하세요 : ");
    scanf("%s", p->name);

    printf("지원할 분야를 적어주세요 (문과: 1, 이과: 2, 예체능: 3, 의예: 4): ");
    scanf("%d", &p->ptype);
    while (p->ptype < 1 || p->ptype > 4) {
        printf("잘못된 입력입니다. 다시 입력해주세요.\n");
        scanf("%d", &p->ptype);
    }
}

// 과목 데이터 입력
void inputSubjectData(struct Subject subjects[], int* numSubjects) {
    int i = 0;
    char j = 'y';

    while (1) {
        printf("과목 %d 정보를 입력합니다.\n", i + 1);
        printf("학년 (1~3): ");
        scanf("%d", &subjects[i].year);

        printf("과목코드 (1: 국어, 2: 영어, 3: 수학, 4: 사회, 5: 한국사, 6: 중국어, 7: 일본어): ");
        scanf("%d", &subjects[i].stype);

        printf("학기 (1학기: 1, 2학기: 2): ");
        scanf("%d", &subjects[i].chepter);

        printf("단위: ");
        scanf("%d", &subjects[i].credit);

        printf("등급 (1~9): ");
        scanf("%d", &subjects[i].grade);

        i++;

        printf("계속 입력할까요? (n/y): ");
        scanf(" %c", &j);
        if (j == 'n' || j == 'N') break;
    }
    *numSubjects = i;
}

// 과목별 평균 계산
struct GradeAverages calculate_averages(float grades[3][5]) {
    struct GradeAverages averages;
    float subject_sum;

    for (int subject = 0; subject < 5; subject++) {
        subject_sum = 0;
        for (int year = 0; year < 3; year++) {
            subject_sum += grades[year][subject];
        }
        averages.subject_averages[subject] = subject_sum / 3;
    }

    return averages;
}

// 과목별 평균 계산 추가 (국어 별 이런)
void calculate_subject_averages(struct Subject subjects[], int numSubjects, float subject_averages[7]) {
    int subject_count[7] = { 0 }; // 과목별 카운트
    float subject_sum[7] = { 0 }; // 과목별 점수 합계

    for (int i = 0; i < numSubjects; i++) {
        int subject_code = subjects[i].stype - 1; // 과목코드 0부터 시작
        if (subject_code >= 0 && subject_code < 7) {
            subject_sum[subject_code] += subjects[i].grade; // 등급 합산
            subject_count[subject_code]++; // 과목별 수 증가
        }
    }

    for (int i = 0; i < 7; i++) {
        if (subject_count[i] > 0) {
            subject_averages[i] = subject_sum[i] / subject_count[i]; // 평균 계산
        }
        else {
            subject_averages[i] = 0; // 과목이 없는 경우 평균 0
        }
    }
}


// 등급 입력
void input_grades(float grades[3][5]) {
    for (int grade_level = 0; grade_level < 3; grade_level++) {
        printf("학년 %d의 과목 등급을 입력하세요.\n", grade_level + 1);
        for (int subject = 0; subject < 5; subject++) {
            printf("과목 %d의 등급 (1~9): ", subject + 1);
            scanf("%f", &grades[grade_level][subject]);
        }
    }
}

// 버블 정렬
void sort(float arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                float temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

// 가천대 점수 계산
float gachon(struct Subject subjects[], struct Person person, int numSubjects) {
    float score[10] = { 0, 100, 99.5, 99, 98.5, 98, 97.5, 85, 60, 30 }; // 실수형 점수
    float totalScores[100] = { 0 }; // 과목별 점수 저장
    int count = 0;

    for (int i = 0; i < numSubjects; i++) {
        float weightedScore = subjects[i].credit * score[subjects[i].grade];
        totalScores[count++] = weightedScore;
    }

    // 상위 10과목 점수 합계
    sort(totalScores, count);
    float total = 0;
    for (int i = 0; i < (count < 10 ? count : 10); i++) {
        total += totalScores[i];
    }

    return total / (count < 10 ? count : 10); // 평균 점수 반환
}

// 상명대 점수 계산
float smu(struct Subject subjects[], int numSubjects) {
    float score[10] = { 0, 100, 99.5, 99, 98.5, 98, 97.5, 85, 60, 30 }; // 실수형 점수
    float totalScore = 0;
    int totalCredits = 0;

    for (int i = 0; i < numSubjects; i++) {
        totalScore += subjects[i].credit * score[subjects[i].grade];
        totalCredits += subjects[i].credit;
    }

    if (totalCredits > 0) {
        return totalScore / totalCredits; // 학점 가중 평균
    }
    return 0; // 학점이 없는 경우
}


// 세종대 방식 점수 계산
float sejong(struct Subject subjects[], struct Person person, int numSubjects) {
    int totalCredits = 0;     // 단위 수 총합
    float totalScore = 0;     // 환산 점수 합계
    float score[10] = { 0, 100, 99.5, 99, 98.5, 98, 97.5, 85, 60, 30 }; // 실수형 점수
    float my_score[5] = { 0, }; // 국어, 영어, 수학, 탐구1, 탐구2 반영
    float my_credits[5] = { 0, };

    for (int i = 0; i < numSubjects; i++) {
        if (subjects[i].stype == 1) { // 국어인 경우
            my_score[0] += subjects[i].credit * score[subjects[i].grade];
            my_credits[0] += subjects[i].credit;
        }
        else if (subjects[i].stype == 2) { // 영어인 경우
            my_score[1] += subjects[i].credit * score[subjects[i].grade];
            my_credits[1] += subjects[i].credit;
        }
        else if (subjects[i].stype == 3) { // 수학인 경우
            my_score[2] += subjects[i].credit * score[subjects[i].grade];
            my_credits[2] += subjects[i].credit;
        }
        else if (subjects[i].stype == 4 || subjects[i].stype == 5) { // 탐구 과목
            if (my_credits[3] == 0) {
                my_score[3] += subjects[i].credit * score[subjects[i].grade];
                my_credits[3] += subjects[i].credit;
            }
            else if (my_credits[4] == 0) {
                my_score[4] += subjects[i].credit * score[subjects[i].grade];
                my_credits[4] += subjects[i].credit;
            }
        }
    }

    // 과목별 평균 점수 계산
    for (int i = 0; i < 5; i++) {
        if (my_credits[i] > 0) {
            my_score[i] /= my_credits[i];
        }
    }

    // 세종대 반영 비율 적용 ( 국어 30%, 영어 30%, 수학 20%, 탐구 각 10%)
    totalScore = (my_score[0] * 3 + my_score[1] * 3 + my_score[2] * 2 + my_score[3] * 1 + my_score[4] * 1) / 10;

    return totalScore;
}

// 명지대 방식 점수 계산
float myongji(struct Subject subjects[], struct Person person, int numSubjects) {
    int totalCredits = 0;     // 단위 수 총합
    float totalScore = 0;     // 환산 점수 합계
    float score[10] = { 0, 100, 99.5, 99, 98.5, 98, 97.5, 85, 60, 30 }; // 실수형 점수
    float my_score[8] = { 0, };
    float my_credits[8] = { 0, };

    for (int i = 0; i < numSubjects; i++) {
        if (subjects[i].stype == 1) { // 국어인 경우
            my_score[1] += subjects[i].credit * score[subjects[i].grade];
            my_credits[1] += subjects[i].credit;
        }
        else if (subjects[i].stype == 2) { // 영어인 경우
            my_score[2] += subjects[i].credit * score[subjects[i].grade];
            my_credits[2] += subjects[i].credit;
        }
        else if (subjects[i].stype == 3) { // 수학인 경우
            my_score[3] += subjects[i].credit * score[subjects[i].grade];
            my_credits[3] += subjects[i].credit;
        }
        else if (subjects[i].stype == 4) { // 사회인 경우
            my_score[4] += subjects[i].credit * score[subjects[i].grade];
            my_credits[4] += subjects[i].credit;
        }
        else if (subjects[i].stype == 5) { // 한국사인 경우
            my_score[5] += subjects[i].credit * score[subjects[i].grade];
            my_credits[5] += subjects[i].credit;
        }
        else if (subjects[i].stype == 6) { // 중국어인 경우
            my_score[6] += subjects[i].credit * score[subjects[i].grade];
            my_credits[6] += subjects[i].credit;
        }
        else if (subjects[i].stype == 7) { // 일본어인 경우
            my_score[7] += subjects[i].credit * score[subjects[i].grade];
            my_credits[7] += subjects[i].credit;
        }
    }

    // 과목별 평균 점수 계산
    for (int i = 0; i < 8; i++) {
        if (my_credits[i] == 0)
            continue;
        my_score[i] /= my_credits[i];
    }

    return my_score[1];
}

