#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h> // exit() 함수 사용

struct Person {
    int ptype;
    char name[20];
};

struct Subject {
    int stype;           // 과목코드
    int year;            // 학년
    int chepter;         // 학기
    int credit;          // 단위
    int grade;           // 등급
};
int numSubjects;

void inputDefultData(struct Person* p) // 포인터로 받아서 수정
{
    //이름입력
    printf("이름을 입력하세요 : ");
    scanf("%s", p->name);  // p.name으로 수정
    //지원 하는 과 분야 입력
    printf("지원할 분야를 적어주세요(문과: 1, 이과: 2, 예체능: 3, 의예: 4) ");
    scanf("%d", &p->ptype);  // p.ptype으로 수정
    while (p->ptype < 1 || p->ptype > 4) {  // 조건 수정: p.ptype이 1~4 사이인지 확인
        printf("다시입력해주세요.\n");
        scanf("%d", &p->ptype);  // p.ptype으로 수정
    }
}

// 입력 함수
void inputSubjectData(struct Subject subjects[])
{
    int i = 0;
    char j = 'y';
    while (1)
    {
        // 학년 및 학기 입력
        printf("학년 (1~3): ");
        scanf("%d", &subjects[i].year);

        // 과목명 입력
        printf("입력할 과목을 선택하세요.\n1.국어\n2.영어\n3.수학\n4.사회\n5.한국사\n6.중국어\n7.일본어\n");
        scanf("%d", &subjects[i].stype);

        // 학기 입력
        printf("학기를 입력하세요: ");
        scanf("%d", &subjects[i].chepter);
        printf("이수 단위: ");
        scanf("%d", &subjects[i].credit);
        printf("등급 (1~9): ");
        scanf("%d", &subjects[i].grade);
        i++;

        printf("계속 입력할까요? (n/y): ");
        scanf(" %c", &j);  // 공백 추가로 버퍼 문제 해결
        if (j == 'n' || j == 'N')
            break;
        printf("\n");
    }
    numSubjects = i;
}
void sort(float arr[], int n) {
    // 버블 정렬 알고리즘
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                // 두 값이 순서가 맞지 않으면 교환
                float temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}
// 등급을 환산점수로 변환
float gachon(struct Subject subjects[], struct Person person)
{
    int totalCredits = 0;     // 단위 수 총합
    float totalScore = 0;     // 환산 점수 합계
    float score[10] = { 0, 100, 99.5, 99, 98.5, 98, 97.5, 85, 60, 30 }; // 실수형 점수
    float my_score[8] = { 0, };
    float my_credits[8] = { 0, };
    for (int i = 0; i < numSubjects; i++)
    {
        if (subjects[i].stype == 1) { // 국어인 경우
            my_score[1] += subjects[i].credit * score[subjects[i].grade];
            my_credits[1] += subjects[i].credit;
        }
        else if (subjects[i].stype == 2) { // 영어인 경우
            my_score[2] += subjects[i].credit * score[subjects[i].grade];
            my_credits[2] += subjects[i].credit;
        }
        else if (subjects[i].stype == 3) { // 수학인 경우
            my_score[3] += subjects[i].credit * score[subjects[i].grade];
            my_credits[3] += subjects[i].credit;
        }
        else if (subjects[i].stype == 4) { // 사회인 경우
            my_score[4] += subjects[i].credit * score[subjects[i].grade];
            my_credits[4] += subjects[i].credit;
        }
        else if (subjects[i].stype == 5) { // 한국사인 경우
            my_score[5] += subjects[i].credit * score[subjects[i].grade];
            my_credits[5] += subjects[i].credit;
        }
        else if (subjects[i].stype == 6) { // 중국어인 경우
            my_score[6] += subjects[i].credit * score[subjects[i].grade];
            my_credits[6] += subjects[i].credit;
        }
        else if (subjects[i].stype == 7) { // 일본어인 경우
            my_score[7] += subjects[i].credit * score[subjects[i].grade];
            my_credits[7] += subjects[i].credit;
        }
        for (int i = 0; i < 8; i++) {
            if (my_credits == 0)
                continue;
            my_score[i] /= my_credits[i];  
        }

    }

    if (person.ptype == 4)
    {
        return (my_score[1] * 2.5 + my_score[2] * 2.5 + my_score[3] * 2.5 + my_score[4] * 2.5) / 10;
    }

    else
    {
        sort(my_score, 8);
        return (my_score[0] * 4 + my_score[1] * 3 + my_score[2] * 2 + my_score[3] * 1) / 10;
    }
}

float smu(struct Subject subjects[], struct Person person)
{
    int totalCredits = 0;     // 단위 수 총합
    float totalScore = 0;     // 환산 점수 합계
    float score[10] = { 0, 100, 99.5, 99, 98.5, 98, 97.5, 85, 60, 30 }; // 실수형 점수
    float my_score[8] = { 0, };
    float my_credits[8] = { 0, };
    for (int i = 0; i < numSubjects; i++)
    {
        if (subjects[i].stype == 1) { // 국어인 경우
            my_score[1] += subjects[i].credit * score[subjects[i].grade];
            my_credits[1] += subjects[i].credit;
        }
        else if (subjects[i].stype == 2) { // 영어인 경우
            my_score[2] += subjects[i].credit * score[subjects[i].grade];
            my_credits[2] += subjects[i].credit;
        }
        else if (subjects[i].stype == 3) { // 수학인 경우
            my_score[3] += subjects[i].credit * score[subjects[i].grade];
            my_credits[3] += subjects[i].credit;
        }
        else if (subjects[i].stype == 4) { // 사회인 경우
            my_score[4] += subjects[i].credit * score[subjects[i].grade];
            my_credits[4] += subjects[i].credit;
        }
        else if (subjects[i].stype == 5) { // 한국사인 경우
            my_score[5] += subjects[i].credit * score[subjects[i].grade];
            my_credits[5] += subjects[i].credit;
        }
        else if (subjects[i].stype == 6) { // 중국어인 경우
            my_score[6] += subjects[i].credit * score[subjects[i].grade];
            my_credits[6] += subjects[i].credit;
        }
        else if (subjects[i].stype == 7) { // 일본어인 경우
            my_score[7] += subjects[i].credit * score[subjects[i].grade];
            my_credits[7] += subjects[i].credit;
        }
        for (int i = 0; i < 8; i++) {
            if (my_credits == 0)
                continue;
            my_score[i] /= my_credits[i];
        }

    }

    if (person.ptype == 4)
    {
        return (my_score[1] * 2.5 + my_score[2] * 2.5 + my_score[3] * 2.5 + my_score[4] * 2.5) / 10;
    }

}

// 메인 함수
int main()
{
    struct Subject subjects[30];
    struct Person p;

    // p.name을 빈 문자열로 초기화하는 방법
    p.name[0] = '\0';  // 또는 memset(p.name, 0, sizeof(p.name)); 사용 가능

    inputDefultData(&p); // 포인터를 넘겨서 함수에서 수정하도록 함

    // 데이터 입력
    inputSubjectData(subjects);

    // 가천대식 점수 계산
    printf("\n가천대식 환산 점수: %.2f\n", gachon(subjects, p));
    printf("\n상명대식 환산 점수: %.3f\n", smu(subjects, p));

    return 0;
}
